// SASS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home
//   width: $icon-home-width
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites
$arrow-left-name: 'arrow-left'
$arrow-left-x: 92px
$arrow-left-y: 97px
$arrow-left-offset-x: -92px
$arrow-left-offset-y: -97px
$arrow-left-width: 18px
$arrow-left-height: 28px
$arrow-left-total-width: 180px
$arrow-left-total-height: 143px
$arrow-left-image: '../../img/sprite.png'
$arrow-left: (92px, 97px, -92px, -97px, 18px, 28px, 180px, 143px, '../../img/sprite.png', 'arrow-left', )
$arrow-right-name: 'arrow-right'
$arrow-right-x: 110px
$arrow-right-y: 97px
$arrow-right-offset-x: -110px
$arrow-right-offset-y: -97px
$arrow-right-width: 18px
$arrow-right-height: 28px
$arrow-right-total-width: 180px
$arrow-right-total-height: 143px
$arrow-right-image: '../../img/sprite.png'
$arrow-right: (110px, 97px, -110px, -97px, 18px, 28px, 180px, 143px, '../../img/sprite.png', 'arrow-right', )
$checked-name: 'checked'
$checked-x: 97px
$checked-y: 77px
$checked-offset-x: -97px
$checked-offset-y: -77px
$checked-width: 17px
$checked-height: 17px
$checked-total-width: 180px
$checked-total-height: 143px
$checked-image: '../../img/sprite.png'
$checked: (97px, 77px, -97px, -77px, 17px, 17px, 180px, 143px, '../../img/sprite.png', 'checked', )
$delivery-name: 'delivery'
$delivery-x: 97px
$delivery-y: 0px
$delivery-offset-x: -97px
$delivery-offset-y: 0px
$delivery-width: 83px
$delivery-height: 77px
$delivery-total-width: 180px
$delivery-total-height: 143px
$delivery-image: '../../img/sprite.png'
$delivery: (97px, 0px, -97px, 0px, 83px, 77px, 180px, 143px, '../../img/sprite.png', 'delivery', )
$facebook-name: 'facebook'
$facebook-x: 0px
$facebook-y: 97px
$facebook-offset-x: 0px
$facebook-offset-y: -97px
$facebook-width: 46px
$facebook-height: 46px
$facebook-total-width: 180px
$facebook-total-height: 143px
$facebook-image: '../../img/sprite.png'
$facebook: (0px, 97px, 0px, -97px, 46px, 46px, 180px, 143px, '../../img/sprite.png', 'facebook', )
$instagram-name: 'instagram'
$instagram-x: 46px
$instagram-y: 97px
$instagram-offset-x: -46px
$instagram-offset-y: -97px
$instagram-width: 46px
$instagram-height: 46px
$instagram-total-width: 180px
$instagram-total-height: 143px
$instagram-image: '../../img/sprite.png'
$instagram: (46px, 97px, -46px, -97px, 46px, 46px, 180px, 143px, '../../img/sprite.png', 'instagram', )
$play-name: 'play'
$play-x: 0px
$play-y: 0px
$play-offset-x: 0px
$play-offset-y: 0px
$play-width: 97px
$play-height: 97px
$play-total-width: 180px
$play-total-height: 143px
$play-image: '../../img/sprite.png'
$play: (0px, 0px, 0px, 0px, 97px, 97px, 180px, 143px, '../../img/sprite.png', 'play', )
$spritesheet-width: 180px
$spritesheet-height: 143px
$spritesheet-image: '../../img/sprite.png'
$spritesheet-sprites: ($arrow-left, $arrow-right, $checked, $delivery, $facebook, $instagram, $play, )
$spritesheet: (180px, 143px, '../../img/sprite.png', $spritesheet-sprites, )

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home
//   @include sprite-width($icon-home)
//
// .icon-email
//   @include sprite($icon-email)
//
// Example usage in HTML:
//   `display: block` sprite:
//   <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//   // CSS
//   .icon {
//     display: inline-block;
//   }
//
//   // HTML
//   <i class="icon icon-home"></i>
@mixin sprite-width($sprite)
  width: nth($sprite, 5)

@mixin sprite-height($sprite)
  height: nth($sprite, 6)

@mixin sprite-position($sprite)
  $sprite-offset-x: nth($sprite, 3)
  $sprite-offset-y: nth($sprite, 4)
  background-position: $sprite-offset-x  $sprite-offset-y

@mixin sprite-image($sprite)
  $sprite-image: nth($sprite, 9)
  background-image: url(#{$sprite-image})

@mixin sprite($sprite)
  @include sprite-image($sprite)
  @include sprite-position($sprite)
  @include sprite-width($sprite)
  @include sprite-height($sprite)

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SASS
//
// @include sprites($spritesheet-sprites)
@mixin sprites($sprites)
  @each $sprite in $sprites
    $sprite-name: nth($sprite, 10)
    .#{$sprite-name}
      @include sprite($sprite)

.icon-
  &arrow-left
    @include sprite($arrow-left)
  &arrow-right
    @include sprite($arrow-right)
  &checked
    @include sprite($checked)
  &delivery
    @include sprite($delivery)
  &facebook
    @include sprite($facebook)
  &instagram
    @include sprite($instagram)
  &play
    @include sprite($play)